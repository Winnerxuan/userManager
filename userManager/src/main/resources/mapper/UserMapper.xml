<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.example.bean.User">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="username" jdbcType="VARCHAR"
			property="username" />
		<result column="avater" jdbcType="VARCHAR" property="avater" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="telephone" jdbcType="VARCHAR"
			property="telephone" />
		<result column="createTime" jdbcType="TIMESTAMP"
			property="createtime" />
		<result column="token" jdbcType="VARCHAR" property="token" />
		<result column="password" jdbcType="VARCHAR"
			property="password" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, email, username, avater, status, telephone, createTime, token,
		password
	</sql>
	<select id="userLogin" parameterType="com.example.bean.User"
		resultType="com.example.bean.User">
		select * from user where 1=1
		<if test="telephone!=null and telephone!=''">
			and telephone=#{telephone}
		</if>
		<if test="email!=null and email!=''">
			and email=#{email}
		</if>
		
		<if test="username!=null and username!=''">
			and username=#{username}
		</if>
		<if test="password!=null and password!=''">
			and password=#{password}
		</if>
	</select>

	<select id="selectByExample"
		parameterType="com.example.bean.UserExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from user
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.example.bean.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.example.bean.User">
		insert into user (id, name, email,
		username, avater, status,
		telephone, createTime, token,
		password)
		values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{username,jdbcType=VARCHAR}, #{avater,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
		#{telephone,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP},
		#{token,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.example.bean.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="avater != null">
				avater,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="telephone != null">
				telephone,
			</if>
			<if test="createtime != null">
				createTime,
			</if>
			<if test="token != null">
				token,
			</if>
			<if test="password != null">
				password,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="avater != null">
				#{avater,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="telephone != null">
				#{telephone,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="token != null">
				#{token,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.example.bean.UserExample"
		resultType="java.lang.Long">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.username != null">
				username = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.avater != null">
				avater = #{record.avater,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.telephone != null">
				telephone = #{record.telephone,jdbcType=VARCHAR},
			</if>
			<if test="record.createtime != null">
				createTime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.token != null">
				token = #{record.token,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set id = #{record.id,jdbcType=VARCHAR},
		name = #{record.name,jdbcType=VARCHAR},
		email = #{record.email,jdbcType=VARCHAR},
		username = #{record.username,jdbcType=VARCHAR},
		avater = #{record.avater,jdbcType=VARCHAR},
		status = #{record.status,jdbcType=INTEGER},
		telephone = #{record.telephone,jdbcType=VARCHAR},
		createTime = #{record.createtime,jdbcType=TIMESTAMP},
		token = #{record.token,jdbcType=VARCHAR},
		password = #{record.password,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.example.bean.User">
		update user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="avater != null">
				avater = #{avater,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="telephone != null">
				telephone = #{telephone,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				createTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="token != null">
				token = #{token,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.example.bean.User">
		update user
		set name = #{name,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		username = #{username,jdbcType=VARCHAR},
		avater = #{avater,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER},
		telephone = #{telephone,jdbcType=VARCHAR},
		createTime = #{createtime,jdbcType=TIMESTAMP},
		token = #{token,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>